{"version":3,"sources":["AutoMapperHelper.ts"],"names":["AutoMapperJs","AutoMapperJs.AutoMapperHelper","AutoMapperJs.AutoMapperHelper.constructor","AutoMapperJs.AutoMapperHelper.getClassName","AutoMapperJs.AutoMapperHelper.getFunctionParameters","AutoMapperJs.AutoMapperHelper.handleCurrying","AutoMapperJs.AutoMapperHelper.handleCurrying.accumulator","AutoMapperJs.AutoMapperHelper.getMappingMetadataFromConfigFunction","AutoMapperJs.AutoMapperHelper.getIgnoreFromString","AutoMapperJs.AutoMapperHelper.getMapFromString","AutoMapperJs.AutoMapperHelper.getFunctionCallIndex","AutoMapperJs.AutoMapperHelper.getConditionFromFunction"],"mappings":"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","file":"AutoMapperHelper.js","sourcesContent":["module AutoMapperJs {\r\n    'use strict';\r\n\r\n    /**\r\n     * AutoMapper helper functions\r\n     */\r\n    export class AutoMapperHelper {\r\n        public static getClassName(classType: new() => any): string {\r\n            // source: http://stackoverflow.com/a/13914278/702357\r\n            if (classType && classType.constructor) {\r\n                let className = classType.toString();\r\n                if (className) {\r\n                    // classType.toString() is \"function classType (...) { ... }\"\r\n                    let matchParts = className.match(/function\\s*(\\w+)/);\r\n                    if (matchParts && matchParts.length === 2) {\r\n                        return matchParts[1];\r\n                    }\r\n                }\r\n\r\n                // for browsers which have name property in the constructor\r\n                // of the object, such as chrome\r\n                if ((<any>classType.constructor).name) {\r\n                    return (<any>classType.constructor).name;\r\n                }\r\n\r\n                if (classType.constructor.toString()) {\r\n                    var str = classType.constructor.toString();\r\n\r\n                    if (str.charAt(0) === '[') {\r\n                        // executed if the return of object.constructor.toString() is \"[object objectClass]\"\r\n                        var arr = str.match(/\\[\\w+\\s*(\\w+)\\]/);\r\n                    } else {\r\n                        // executed if the return of object.constructor.toString() is \"function objectClass () {}\"\r\n                        // (IE and Firefox)\r\n                        var arr = str.match(/function\\s*(\\w+)/);\r\n                    }\r\n\r\n                    if (arr && arr.length === 2) {\r\n                        return arr[1];\r\n                    }\r\n                }\r\n            }\r\n\r\n            throw new Error(`Unable to extract class name from type '${classType}'`);\r\n        }\r\n\r\n        public static getFunctionParameters(func: Function): Array<string> {\r\n            const stripComments = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\n            const argumentNames = /([^\\s,]+)/g;\r\n\r\n            var functionString = func.toString().replace(stripComments, '');\r\n            var functionParameterNames = functionString.slice(functionString.indexOf('(') + 1, functionString.indexOf(')')).match(argumentNames);\r\n            if (functionParameterNames === null) {\r\n                functionParameterNames = new Array<string>();\r\n            }\r\n            return functionParameterNames;\r\n        }\r\n\r\n        public static handleCurrying(func: Function, args: IArguments, closure: any): any {\r\n            const argumentsStillToCome = func.length - args.length;\r\n\r\n            // saved accumulator array\r\n            // NOTE BL this does not deep copy array objects, only the array itself; should side effects occur, please report (or refactor).\r\n            var argumentsCopy = Array.prototype.slice.apply(args);\r\n\r\n            function accumulator(moreArgs: IArguments, alreadyProvidedArgs: Array<any>, stillToCome: number): Function {\r\n                var previousAlreadyProvidedArgs = alreadyProvidedArgs.slice(0); // to reset\r\n                var previousStillToCome = stillToCome; // to reset\r\n\r\n                for (let i = 0; i < moreArgs.length; i++, stillToCome--) {\r\n                    alreadyProvidedArgs[alreadyProvidedArgs.length] = moreArgs[i];\r\n                }\r\n\r\n                if (stillToCome - moreArgs.length <= 0) {\r\n                    var functionCallResult = func.apply(closure, alreadyProvidedArgs);\r\n\r\n                    // reset vars, so curried function can be applied to new params.\r\n                    alreadyProvidedArgs = previousAlreadyProvidedArgs;\r\n                    stillToCome = previousStillToCome;\r\n\r\n                    return functionCallResult;\r\n                } else {\r\n                    return function(): Function {\r\n                        // arguments are params, so closure bussiness is avoided.\r\n                        return accumulator(arguments, alreadyProvidedArgs.slice(0), stillToCome);\r\n                    };\r\n                }\r\n            }\r\n\r\n            return accumulator(<IArguments>(<any>[]), argumentsCopy, argumentsStillToCome);\r\n        }\r\n\r\n        public static getMappingMetadataFromConfigFunction(destination: string, func: any, sourceMapping: boolean): IMemberMappingMetaData {\r\n            if (typeof func !== 'function') {\r\n                return {\r\n                    destination: destination,\r\n                    source: destination,\r\n                    sourceMapping: sourceMapping,\r\n                    condition: null,\r\n                    ignore: false,\r\n                    async: false\r\n                };\r\n            }\r\n\r\n            var funcStr = func.toString();\r\n\r\n            var parameterNames = AutoMapperHelper.getFunctionParameters(func);\r\n            var optsParamName = parameterNames.length >= 1 ? parameterNames[0] : '';\r\n\r\n            var source = sourceMapping\r\n                ? destination\r\n                : AutoMapperHelper.getMapFromString(funcStr, destination, optsParamName);\r\n\r\n            var metadata: IMemberMappingMetaData = {\r\n                destination: destination,\r\n                source: source,\r\n                sourceMapping: sourceMapping,\r\n                condition: null,\r\n                ignore: AutoMapperHelper.getIgnoreFromString(funcStr, destination),\r\n                async: parameterNames.length === 2\r\n            };\r\n\r\n            // calling the member options function when used asynchronous would be too 'dangerous'.\r\n            if (!metadata.async && AutoMapperHelper.getFunctionCallIndex(funcStr, 'condition', optsParamName) >= 0) {\r\n                metadata.condition = AutoMapperHelper.getConditionFromFunction(func, source);\r\n            }\r\n\r\n            return metadata;\r\n        }\r\n\r\n        private static getIgnoreFromString(functionString: string, optionsParameterName: string): boolean {\r\n            var indexOfIgnore = AutoMapperHelper.getFunctionCallIndex(functionString, 'ignore', optionsParameterName);\r\n            if (indexOfIgnore < 0) {\r\n                return false;\r\n            }\r\n\r\n            var indexOfMapFromStart = functionString.indexOf('(', indexOfIgnore) + 1;\r\n            var indexOfMapFromEnd = functionString.indexOf(')', indexOfMapFromStart);\r\n\r\n            if (indexOfMapFromStart < 0 || indexOfMapFromEnd < 0) {\r\n                return false;\r\n            }\r\n\r\n            var ignoreString = functionString.substring(indexOfMapFromStart, indexOfMapFromEnd).replace(/\\r/g, '').replace(/\\n/g, '').trim();\r\n            return ignoreString === null || ignoreString === ''\r\n                ? true // <optionsParameterName>.ignore()\r\n                : false; // <optionsParameterName>.ignore(<ignoreString> -> unexpected content)\r\n        }\r\n\r\n        private static getMapFromString(functionString: string, defaultValue: string, optionsParameterName: string): string {\r\n            var indexOfMapFrom = AutoMapperHelper.getFunctionCallIndex(functionString, 'mapFrom', optionsParameterName);\r\n            if (indexOfMapFrom < 0) {\r\n                return defaultValue;\r\n            }\r\n\r\n            var indexOfMapFromStart = functionString.indexOf('(', indexOfMapFrom) + 1;\r\n            var indexOfMapFromEnd = functionString.indexOf(')', indexOfMapFromStart);\r\n\r\n            if (indexOfMapFromStart < 0 || indexOfMapFromEnd < 0) {\r\n                return defaultValue;\r\n            }\r\n\r\n            var mapFromString = functionString.substring(indexOfMapFromStart, indexOfMapFromEnd).replace(/'/g, '').replace(/\"/g, '').trim();\r\n            return mapFromString === null || mapFromString === ''\r\n                ? defaultValue\r\n                : mapFromString;\r\n        }\r\n\r\n        private static getFunctionCallIndex(functionString: string, functionToLookFor: string, optionsParameterName: string): number {\r\n            var indexOfFunctionCall = functionString.indexOf(optionsParameterName + '.' + functionToLookFor);\r\n            if (indexOfFunctionCall < 0) {\r\n                indexOfFunctionCall = functionString.indexOf('.' + functionToLookFor);\r\n            }\r\n\r\n            return indexOfFunctionCall;\r\n        }\r\n\r\n        private static getConditionFromFunction(func: Function, sourceProperty: string): ((sourceObject: any) => boolean) {\r\n            // Since we are calling the valueOrFunction function to determine whether to ignore or map from another property, we\r\n            // want to prevent the call to be error prone when the end user uses the '(opts)=> opts.sourceObject.sourcePropertyName'\r\n            // syntax. We don't actually have a source object when creating a mapping; therefore, we 'stub' a source object for the\r\n            // function call.\r\n            var sourceObject: any = {};\r\n            sourceObject[sourceProperty] = {};\r\n\r\n            var condition: (sourceObject: any) => boolean;\r\n\r\n            // calling the function will result in calling our stubbed ignore() and mapFrom() functions if used inside the function.\r\n            const configFuncOptions: IMemberConfigurationOptions = {\r\n                ignore: (): void => {\r\n                    // do nothing\r\n                },\r\n                condition: (predicate: ((sourceObject: any) => boolean)): void => {\r\n                    condition = predicate;\r\n                },\r\n                mapFrom: (sourcePropertyName: string): void => {\r\n                    // do nothing\r\n                },\r\n                sourceObject: sourceObject,\r\n                sourcePropertyName: sourceProperty,\r\n                intermediatePropertyValue: {}\r\n            };\r\n\r\n            try {\r\n                func(configFuncOptions);\r\n            } catch (exc) {\r\n                // do not handle by default.\r\n            }\r\n\r\n            return condition;\r\n        }\r\n\t}\r\n}"],"sourceRoot":"/source/"}