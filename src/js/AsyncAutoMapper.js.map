{"version":3,"sources":["AsyncAutoMapper.ts"],"names":["AutoMapperJs","AutoMapperJs.AsyncAutoMapper","AutoMapperJs.AsyncAutoMapper.constructor","AutoMapperJs.AsyncAutoMapper.getInstance","AutoMapperJs.AsyncAutoMapper.mapAsyncInternal"],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,yCAAyC;AACzC,4CAA4C;AAC5C,+CAA+C;;;;;;;AAE/C,IAAO,YAAY,CAiClB;AAjCD,WAAO,YAAY,EAAC,CAAC;IACjBA,YAAYA,CAACA;IAEbA,AAIAA;;;OADGA;;QACkCC,mCAAUA;QAG3CA;;;;WAIGA;QACHA;YACLC,iBAAOA,CAACA;YACCA,eAAeA,CAACA,aAAaA,GAAGA,IAAIA,CAACA;QACzCA,CAACA;QAEDD;;;WAGGA;QACWA,2BAAWA,GAAzBA;YACIE,MAAMA,CAACA,eAAeA,CAACA,aAAaA,CAACA;QACzCA,CAACA;QAEMF,0CAAgBA,GAAvBA,UAAwBA,OAAiBA,EAAEA,YAAiBA,EAAEA,QAAsBA;YAChFG,AACAA,uCADuCA;kBACjCA,IAAIA,KAAKA,CAACA,0BAA0BA,CAACA,CAACA;QAChDA,CAACA;QAvBcH,6BAAaA,GAAGA,IAAIA,eAAeA,EAAEA,CAACA;QAwB5DA,sBAACA;IAADA,CAzBGD,AAyBFC,EAzBuCD,uBAAUA,EAyBjDA;IAzBeA,4BAAeA,kBAyB9BA,CAAAA;AACFA,CAACA,EAjCM,YAAY,KAAZ,YAAY,QAiClB","file":"AsyncAutoMapper.js","sourcesContent":["/// <reference path=\"../../dist/arcady-automapper-interfaces.d.ts\" />\r\n/// <reference path=\"AutoMapper.ts\" />\r\n/// <reference path=\"TypeConverter.ts\" />\r\n/// <reference path=\"AutoMapperHelper.ts\" />\r\n/// <reference path=\"AutoMapperValidator.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n    /**\r\n     * AutoMapper implementation, for both creating maps and performing maps. Comparable usage and functionality to the original\r\n     * .NET AutoMapper library is the pursuit of this implementation.\r\n     */\r\n    export class AsyncAutoMapper extends AutoMapper {\r\n        private static asyncInstance = new AsyncAutoMapper();\r\n\r\n        /**\r\n         * Creates a new AutoMapper instance. This class is intended to be a Singleton.\r\n         * Do not use the constructor directly from code. Use getInstance() function instead.\r\n         * @constructor\r\n         */\r\n        constructor() {\r\n\t\t\tsuper();\r\n            AsyncAutoMapper.asyncInstance = this;\r\n        }\r\n\r\n        /**\r\n         * Gets AutoMapper Singleton instance.\r\n         * @returns {Core.AutoMapper}\r\n         */\r\n        public static getInstance(): AsyncAutoMapper {\r\n            return AsyncAutoMapper.asyncInstance;\r\n        }\r\n\r\n        public mapAsyncInternal(mapping: IMapping, sourceObject: any, callback: IMapCallback): void {\r\n            //callback('No implementation yet...');\r\n            throw new Error('No implementation yet...');\r\n        }\r\n\t}\r\n}"],"sourceRoot":"/source/"}