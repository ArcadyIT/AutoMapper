{"version":3,"sources":["AsyncAutoMapper.ts"],"names":["AutoMapperJs","AutoMapperJs.AsyncAutoMapper","AutoMapperJs.AsyncAutoMapper.constructor","AutoMapperJs.AsyncAutoMapper.getInstance","AutoMapperJs.AsyncAutoMapper.createMapForMember","AutoMapperJs.AsyncAutoMapper.createMapForMemberFunction","AutoMapperJs.AsyncAutoMapper.createMapForSourceMemberFunction","AutoMapperJs.AsyncAutoMapper.createMapConvertUsing","AutoMapperJs.AsyncAutoMapper.map","AutoMapperJs.AsyncAutoMapper.mapWithMapping","AutoMapperJs.AsyncAutoMapper.mapArray","AutoMapperJs.AsyncAutoMapper.mapItemUsingTypeConverter","AutoMapperJs.AsyncAutoMapper.mapItem","AutoMapperJs.AsyncAutoMapper.mapProperty","AutoMapperJs.AsyncAutoMapper.handlePropertyMappings","AutoMapperJs.AsyncAutoMapper.handlePropertyMappingFunction"],"mappings":"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","file":"AsyncAutoMapper.js","sourcesContent":["/// <reference path=\"../../dist/automapper-interfaces.d.ts\" />\r\n/// <reference path=\"AutoMapper.ts\" />\r\n/// <reference path=\"TypeConverter.ts\" />\r\n/// <reference path=\"AutoMapperHelper.ts\" />\r\n/// <reference path=\"AutoMapperValidator.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n    /**\r\n     * AsyncAutoMapper implementation, for asynchronous mapping support when using AutoMapper.\r\n     */\r\n    export class AsyncAutoMapper extends AutoMapperBase {\r\n        private static asyncInstance = new AsyncAutoMapper();\r\n\r\n        /**\r\n         * Creates a new AsyncAutoMapper instance. This class is intended to be a Singleton.\r\n         * Do not use the constructor directly from code. Use getInstance() function instead.\r\n         * @constructor\r\n         */\r\n        constructor() {\r\n            super();\r\n            AsyncAutoMapper.asyncInstance = this;\r\n        }\r\n\r\n        /**\r\n         * Gets AutoMapper Singleton instance.\r\n         * @returns {Core.AutoMapper}\r\n         */\r\n        public static getInstance(): AsyncAutoMapper {\r\n            return AsyncAutoMapper.asyncInstance;\r\n        }\r\n\r\n        public createMapForMember(property: IProperty,\r\n                                  func: ((opts: IMemberConfigurationOptions, cb: IMemberCallback) => void),\r\n                                  metadata: IMemberMappingMetaData): void {\r\n            var { mapping } = property.metadata;\r\n\r\n            mapping.async = true;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback) => this.mapItem(m, srcObj, dstObj, cb);\r\n            property.async = true;\r\n            property.conversionValuesAndFunctions.push(func);\r\n        }\r\n\r\n        public createMapForMemberFunction(mapping: IMapping, memberMapping: IForMemberMapping,\r\n            memberConfigFunc: ((opts: IMemberConfigurationOptions, cb: IMemberCallback) => void)): void {\r\n            mapping.async = true;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback) => this.mapItem(m, srcObj, dstObj, cb);\r\n            memberMapping.async = true;\r\n            memberMapping.mappingValuesAndFunctions.push(memberConfigFunc);\r\n        }\r\n\r\n        public createMapForSourceMemberFunction(mapping: IMapping, memberMapping: IForMemberMapping,\r\n            memberConfigFunc: (opts: ISourceMemberConfigurationOptions, cb: IMemberCallback) => void): void {\r\n            mapping.async = true;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback) => this.mapItem(m, srcObj, dstObj, cb);\r\n            memberMapping.async = true;\r\n            memberMapping.mappingValuesAndFunctions.push(memberConfigFunc);\r\n        }\r\n\r\n        public createMapConvertUsing(mapping: IMapping, converterFunction: (ctx: IResolutionContext, cb: IMapCallback) => void): void {\r\n            mapping.async = true;\r\n            mapping.typeConverterFunction = converterFunction;\r\n            mapping.mapItemFunction = (m: IMapping, srcObj: any, dstObj: any, cb: IMapCallback) => this.mapItemUsingTypeConverter(m, srcObj, dstObj, cb);\r\n        }\r\n\r\n        public map(sourceKey: string | (new () => any),\r\n            destinationKey: string | (new () => any),\r\n            mappings: { [key: string]: IMapping },\r\n            sourceObject: any,\r\n            callback: IMapCallback): any {\r\n\r\n            if (arguments.length === 5) {\r\n                this.mapWithMapping(super.getMapping(mappings, sourceKey, destinationKey), sourceObject, callback);\r\n                return;\r\n            }\r\n\r\n            // provide performance optimized (preloading) currying support.\r\n            if (arguments.length === 2) {\r\n                return (srcObj: any, callback: IMapCallback) => this.mapWithMapping(super.getMapping(mappings, sourceKey, destinationKey), srcObj, callback);\r\n            }\r\n\r\n            if (arguments.length === 1) {\r\n                return (dstKey: string | (new () => any), srcObj: any, callback: IMapCallback) => this.map(sourceKey, dstKey, mappings, srcObj, callback);\r\n            }\r\n\r\n            return (srcKey: string | (new () => any), dstKey: string | (new () => any), srcObj: any) => this.map(srcKey, dstKey, mappings, srcObj, callback);\r\n        }\r\n\r\n        public mapWithMapping(mapping: IMapping, sourceObject: any, callback: IMapCallback): void {\r\n            if (super.isArray(sourceObject)) {\r\n                this.mapArray(mapping, sourceObject, callback);\r\n                return;\r\n            }\r\n\r\n            return (<IAsyncMapItemFunction>mapping.mapItemFunction)(mapping, sourceObject, super.createDestinationObject(mapping.destinationTypeClass), callback);\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source array to a new destination array with explicit mapping configuration and supplied mapping options (using createMap).\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceArray The source array to map.\r\n         * @returns {Array<any>} Destination array.\r\n         */\r\n        private mapArray(mapping: IMapping, sourceArray: Array<any>, callback: IMapCallback): void {\r\n            var callbacksToGo = 0;\r\n\r\n            var destinationArray = super.handleArray(mapping, sourceArray, (sourceObject: any, destinationObject: any) => {\r\n                callbacksToGo++;\r\n                (<IAsyncMapItemFunction>mapping.mapItemFunction)(mapping, sourceObject, destinationObject, (result: any): void => {\r\n                    callbacksToGo--;\r\n                    if (callbacksToGo === 0) {\r\n                        callback(destinationArray);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        private mapItemUsingTypeConverter(mapping: IMapping, sourceObject: any, destinationObject: any, callback: IMapCallback): void {\r\n            var resolutionContext: IResolutionContext = {\r\n                sourceValue: sourceObject,\r\n                destinationValue: destinationObject\r\n            };\r\n            (<(ctx: IResolutionContext, cb: IMapCallback) => any>mapping.typeConverterFunction)(resolutionContext, callback);\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source object to a new destination object with explicit mapping configuration and supplied mapping options (using createMap).\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceObject The source object to map.\r\n         * @param destinationObject The destination object to map to.\r\n         * @param callback The callback to call after async mapping has been executed.\r\n         */\r\n        private mapItem(mapping: IMapping, sourceObject: any, destinationObject: any, callback: IMapCallback): void {\r\n            var callbacksToGo = 0;\r\n\r\n            super.handleItem(mapping, sourceObject, destinationObject, (sourceProperty: string) => {\r\n                callbacksToGo++;\r\n                this.mapProperty(mapping, sourceObject, sourceProperty, destinationObject, (result: any): void => {\r\n                    callbacksToGo--;\r\n                    if (callbacksToGo === 0) {\r\n                        callback(destinationObject);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Execute a mapping from the source object property to the destination object property with explicit mapping configuration and supplied mapping options.\r\n         * @param mapping The mapping configuration for the current mapping keys/types.\r\n         * @param sourceObject The source object to map.\r\n         * @param sourcePropertyName The source property to map.\r\n         * @param destinationObject The destination object to map to.\r\n         * @param callback The callback to call after async property mapping has been executed.\r\n         */\r\n        private mapProperty(mapping: IMapping, sourceObject: any, sourceProperty: string, destinationObject: any, callback: IMemberCallback): void {\r\n            super.handleProperty(mapping, sourceObject, sourceProperty, destinationObject,\r\n                (destinations: IProperty[], valuesAndFunctions: Array<any>, opts: IMemberConfigurationOptions) => {\r\n                    this.handlePropertyMappings(valuesAndFunctions, opts, (destinationPropertyValue: any) => {\r\n                        for (let destination of destinations) {\r\n                            super.setPropertyValue(mapping, destinationObject, destination, destinationPropertyValue);\r\n                        }\r\n                        callback(destinationPropertyValue);\r\n                    });\r\n                });\r\n        }\r\n\r\n        private handlePropertyMappings(valuesAndFunctions: Array<any>, opts: IMemberConfigurationOptions, callback: IMemberCallback): void {\r\n            if (!valuesAndFunctions || valuesAndFunctions.length === 0) {\r\n                callback(opts.intermediatePropertyValue);\r\n                return;\r\n            }\r\n\r\n            var valueOrFunction = valuesAndFunctions[0];\r\n\r\n            if (typeof valueOrFunction === 'function') {\r\n                this.handlePropertyMappingFunction(valueOrFunction, opts, (result: any) => {\r\n                    if (typeof result !== 'undefined') {\r\n                        opts.intermediatePropertyValue = result;\r\n\r\n                        // recursively walk values/functions\r\n                        this.handlePropertyMappings(valuesAndFunctions.slice(1), opts, callback);\r\n                    }\r\n                });\r\n            } else {\r\n                // valueOrFunction is a value\r\n                opts.intermediatePropertyValue = valueOrFunction;\r\n\r\n                // recursively walk values/functions\r\n                this.handlePropertyMappings(valuesAndFunctions.slice(1), opts, callback);\r\n            }\r\n        }\r\n\r\n        private handlePropertyMappingFunction(func: Function, opts: IMemberConfigurationOptions, callback: IMemberCallback): void {\r\n            // check if function is asynchronous\r\n            var args = AutoMapperHelper.getFunctionParameters(func);\r\n            if (args.length === 2) { // asynchronous: opts, callback\r\n                func(opts, callback);\r\n                return;\r\n            }\r\n\r\n            callback(func(opts));\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}