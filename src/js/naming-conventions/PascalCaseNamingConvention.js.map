{"version":3,"sources":["naming-conventions/PascalCaseNamingConvention.ts"],"names":["AutoMapperJs","AutoMapperJs.PascalCaseNamingConvention","AutoMapperJs.PascalCaseNamingConvention.constructor","AutoMapperJs.PascalCaseNamingConvention.transformPropertyName"],"mappings":"AAAA,wEAAwE;AAExE,IAAO,YAAY,CAuBlB;AAvBD,WAAO,YAAY,EAAC,CAAC;IACjBA,YAAYA,CAACA;IAEhBA;QAAAC;YACcC,wBAAmBA,GAAGA,kDAAkDA,CAACA;YACzEA,uBAAkBA,GAAGA,EAAEA,CAACA;QAiBtCA,CAACA;QAfOD,0DAAqBA,GAA5BA,UAA6BA,uBAAiCA;YACpDE,gCAAgCA;YAChCA,IAAIA,MAAMA,GAAWA,EAAEA,CAACA;YAExBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,KAAKA,GAAGA,CAACA,EAAEA,MAAMA,GAAGA,uBAAuBA,CAACA,MAAMA,EAAEA,KAAKA,GAAGA,MAAMA,EAAEA,KAAKA,EAAEA,EAAEA,CAACA;gBACnFA,MAAMA,IAAIA,uBAAuBA,CAACA,KAAKA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,WAAWA,EAAEA;oBACtDA,uBAAuBA,CAACA,KAAKA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;YAKvDA,CAACA;YAEDA,MAAMA,CAACA,MAAMA,CAACA;QAClBA,CAACA;QACRF,iCAACA;IAADA,CAnBAD,AAmBCC,IAAAD;IAnBYA,uCAA0BA,6BAmBtCA,CAAAA;AACFA,CAACA,EAvBM,YAAY,KAAZ,YAAY,QAuBlB","file":"naming-conventions/PascalCaseNamingConvention.js","sourcesContent":["/// <reference path=\"../../../dist/arcady-automapper-interfaces.d.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n\texport class PascalCaseNamingConvention implements INamingConvention {\r\n        public splittingExpression = /(^[A-Z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+)/;\r\n        public separatorCharacter = '';\r\n\r\n\t\tpublic transformPropertyName(sourcePropertyNameParts: string[]): string {\r\n            // Transform the splitted parts.\r\n            var result: string = '';\r\n\r\n            for (var index = 0, length = sourcePropertyNameParts.length; index < length; index++) {\r\n                result += sourcePropertyNameParts[index].charAt(0).toUpperCase() +\r\n                          sourcePropertyNameParts[index].substr(1);\r\n\r\n\t\t\t\t//if (index < (length - 1)) {\r\n\t\t\t\t//    this.separatorCharacter;\r\n\t\t\t\t//}\r\n            }\r\n\r\n            return result;\r\n        }\r\n\t}\r\n}"],"sourceRoot":"/source/"}