{"version":3,"sources":["Profile.ts"],"names":["AutoMapperJs","AutoMapperJs.Profile","AutoMapperJs.Profile.constructor","AutoMapperJs.Profile.configure","AutoMapperJs.Profile.createMap"],"mappings":"AAAA,8DAA8D;AAC9D,mDAAmD;AAEnD,IAAO,YAAY,CA8ClB;AA9CD,WAAO,YAAY,EAAC,CAAC;IACjBA,YAAYA,CAACA;IAEbA,AAGAA;;OADGA;;QACHC;QAuCAC,CAACA;QA7BGD;;;WAGGA;QACIA,2BAASA,GAAhBA;YACIE,aAAaA;QACjBA,CAACA;QAEDF;;;;;WAKGA;QACOA,2BAASA,GAAnBA,UAAoBA,SAAiBA,EAAEA,cAAsBA;YACzDG,IAAIA,QAAQA,GAAGA,KAAKA,CAACA,SAASA,CAACA,KAAKA,CAACA,KAAKA,CAACA,SAASA,CAACA,CAACA;YAEtDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,KAAKA,GAAGA,CAACA,EAAEA,MAAMA,GAAGA,QAAQA,CAACA,MAAMA,EAAEA,KAAKA,GAAGA,MAAMA,EAAEA,KAAKA,EAAGA,EAAEA,CAACA;gBACrEA,EAAEA,CAACA,CAACA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;oBACnBA,QAAQA,CAACA;gBACbA,CAACA;gBAEDA,AACAA,2DAD2DA;gBAC3DA,QAAQA,CAACA,KAAKA,CAACA,GAAMA,IAAIA,CAACA,WAAWA,UAAKA,QAAQA,CAACA,KAAKA,CAAGA,CAACA;YAChEA,CAACA;YAEDA,AACAA,sFADsFA;YACtFA,MAAMA,CAACA,UAAUA,CAACA,SAASA,CAACA,KAAKA,CAACA,UAAUA,EAAEA,QAAQA,CAACA,CAACA;QAC5DA,CAACA;QACLH,cAACA;IAADA,CAvCAD,AAuCCC,IAAAD;IAvCYA,oBAAOA,UAuCnBA,CAAAA;AACLA,CAACA,EA9CM,YAAY,KAAZ,YAAY,QA8ClB","file":"Profile.js","sourcesContent":["/// <reference path=\"../../dist/automapper-interfaces.d.ts\" />\r\n/// <reference path=\"../../src/ts/AutoMapper.ts\" />\r\n\r\nmodule AutoMapperJs {\r\n    'use strict';\r\n\r\n    /**\r\n     * Converts source type to destination type instead of normal member mapping\r\n     */\r\n    export class Profile implements IProfile {\r\n        /** Profile name */\r\n        public profileName: string;\r\n\r\n        /** Naming convention for source members */\r\n        public sourceMemberNamingConvention: INamingConvention;\r\n\r\n        /** Naming convention for destination members */\r\n        public destinationMemberNamingConvention: INamingConvention;\r\n\r\n        /**\r\n         * Implement this method in a derived class and call the CreateMap method to associate that map with this profile.\r\n         * Avoid calling the AutoMapper class / automapper instance from this method. \r\n         */\r\n        public configure(): void {\r\n            // do nothing\r\n        }\r\n\r\n        /**\r\n         * Create a mapping profile.\r\n         * @param {string} sourceKey The map source key.\r\n         * @param {string} destinationKey The map destination key.\r\n         * @returns {Core.ICreateMapFluentFunctions}\r\n         */\r\n        protected createMap(sourceKey: string, destinationKey: string): ICreateMapFluentFunctions {\r\n            var argsCopy = Array.prototype.slice.apply(arguments);\r\n\r\n            for (var index = 0, length = argsCopy.length; index < length; index ++) {\r\n                if (!argsCopy[index]) {\r\n                    continue;\r\n                }\r\n\r\n                // prefix sourceKey and destinationKey with 'profileName=>'\r\n                argsCopy[index] = `${this.profileName}=>${argsCopy[index]}`;\r\n            }\r\n\r\n            // pass through using arguments to keep createMap's currying support fully functional.\r\n            return automapper.createMap.apply(automapper, argsCopy);\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}