/*!
 * TypeScript / Javascript AutoMapper Library v1.4.0
 * https://github.com/ArcadyIT/AutoMapper
 *
 * Copyright 2015 Arcady BV and other contributors
 * Released under the MIT license
 *
 * Date: 2015-10-16T15:23:46.504Z
 */
var AutoMapperJs;!function(r){"use strict";var t=function(){function r(){}return r.getClassName=function(r){if(r&&r.constructor){var t=r.toString();if(t){var n=t.match(/function\s*(\w+)/);if(n&&2===n.length)return n[1]}if(r.constructor.name)return r.constructor.name;if(r.constructor.toString()){var e=r.constructor.toString();if("["===e.charAt(0))var a=e.match(/\[\w+\s*(\w+)\]/);else var a=e.match(/function\s*(\w+)/);if(a&&2===a.length)return a[1]}}throw new Error("Unable to extract class name from type '"+r+"'")},r.getFunctionParameters=function(r){var t=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,n=/([^\s,]+)/g,e=r.toString().replace(t,""),a=e.slice(e.indexOf("(")+1,e.indexOf(")")).match(n);return null===a&&(a=new Array),a},r.handleCurrying=function(r,t,n){function e(t,a,o){for(var c=a.slice(0),u=o,i=0;i<t.length;i++,o--)a[a.length]=t[i];if(o-t.length<=0){var s=r.apply(n,a);return a=c,o=u,s}return function(){return e(arguments,a.slice(0),o)}}var a=r.length-t.length,o=Array.prototype.slice.apply(t);return e([],o,a)},r}();r.AutoMapperHelper=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(e){"use strict";var r=function(){function r(){}return r.assertConfigurationIsValid=function(e,n){void 0===n&&(n=!0);for(var t in e)e.hasOwnProperty(t)&&r.assertMappingConfiguration(e[t],n)},r.assertMappingConfiguration=function(n,t){var o=n.sourceKey+"=>"+n.destinationKey,i=n.sourceTypeClass,a=n.destinationTypeClass,p=i?e.AutoMapperHelper.getClassName(i):void 0,s=a?e.AutoMapperHelper.getClassName(a):void 0;if(!i||!a){if(t===!1)return;throw new Error("Mapping '"+o+"' cannot be validated, since mapping.sourceType or mapping.destinationType are unspecified.")}var u=function(e){if(e)throw new Error("Mapping '"+o+"' is invalid: "+e+" (source: '"+p+"', destination: '"+s+"').")},d=new Array,f=new i,c=new a;for(var y in n.forMemberMappings)n.forMemberMappings.hasOwnProperty(y)&&(u(r.validatePropertyMapping(n.forMemberMappings[y],y,f,c)),d.push(y));for(var g in f)f.hasOwnProperty(g)&&(d.indexOf(g)>=0||(u(r.validateProperty(g,c)),d.push(g)));for(var m in c)c.hasOwnProperty(m)&&(d.indexOf(m)>=0||u("Destination member '"+m+"' does not exist on source type"))},r.validatePropertyMapping=function(e,n,t,o){return e.sourceMapping?r.validateSourcePropertyMapping(e,n,t,o):r.validateDestinationPropertyMapping(e,n,t,o)},r.validateSourcePropertyMapping=function(e,r,n,t){if(!n.hasOwnProperty(r))return"Source member '"+r+"' is configured, but does not exist on source type";{if(!e.ignore)return t.hasOwnProperty(r)?void 0:"Source member '"+r+"' is configured to be mapped, but does not exist on destination type";if(t.hasOwnProperty(r))return"Source member '"+r+"' is ignored, but does exist on destination type"}},r.validateDestinationPropertyMapping=function(e,r,n,t){if(!t.hasOwnProperty(r))return"Destination member '"+r+"' is configured, but does not exist on destination type";{if(!e.ignore)return n.hasOwnProperty(r)?void 0:"Destination member '"+r+"' is configured to be mapped, but does not exist on source type";if(n.hasOwnProperty(r))return"Destination member '"+r+"' is ignored, but does exist on source type"}},r.validateProperty=function(e,r){return r.hasOwnProperty(e)?void 0:"Source member '"+e+"' is configured to be mapped, but does not exist on destination type"},r}();e.AutoMapperValidator=r}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(e){"use strict";var t=function(){function t(){return t.instance?t.instance:(t.instance=this,this.profiles={},this.mappings={},void 0)}return t.getInstance=function(){return t.instance},t.prototype.initialize=function(e){var t=this,n={addProfile:function(e){e.configure(),t.profiles[e.profileName]=e},createMap:function(e,n){return t.createMap.apply(t,arguments)}};e(n)},t.prototype.createMap=function(t,n){var r=this;if(arguments.length<2)return e.AutoMapperHelper.handleCurrying(this.createMap,arguments,this);var o=this.getKey(t),i=this.getKey(n),a=o+i,p={sourceKey:o,destinationKey:i,forAllMemberMappings:new Array,forMemberMappings:{},typeConverterFunction:void 0,mapItemFunction:this.mapItem,sourceTypeClass:"string"==typeof t?void 0:t,destinationTypeClass:"string"==typeof n?void 0:n,profile:void 0,async:!1};this.mappings[a]=p;var s={forMember:function(e,t){return r.createMapForMember(p,s,e,t)},forSourceMember:function(e,t){return r.createMapForSourceMember(p,s,e,t)},forAllMembers:function(e){return r.createMapForAllMembers(p,s,e)},ignoreAllNonExisting:function(){return r.createMapIgnoreAllNonExisting(p,s)},convertToType:function(e){return r.createMapConvertToType(p,s,e)},convertUsing:function(e){return r.createMapConvertUsing(p,e)},withProfile:function(e){return r.createMapWithProfile(p,e)}};return s},t.prototype.map=function(e,t,n){var r=this;if(3===arguments.length){var o=this.getKey(e),i=this.getKey(t),a=this.mappings[o+i];if(!a)throw new Error("Could not find map object with a source of "+o+" and a destination of "+i);return this.mapInternal(a,n)}if(2===arguments.length){var o=this.getKey(e),i=this.getKey(t),a=this.mappings[o+i];return function(e){return r.mapInternal(a,e)}}return 1===arguments.length?function(t,n){return r.map(e,t,n)}:function(e,t,n){return r.map(e,t,n)}},t.prototype.mapAsync=function(t,n,r,o){var i=this;if(4===arguments.length){var a=this.getKey(t),p=this.getKey(n),s=this.mappings[a+p];if(!s)throw new Error("Could not find map object with a source of "+a+" and a destination of "+p);return void e.AsyncAutoMapper.getInstance().mapAsyncInternal(s,r,o)}if(2===arguments.length){var a=this.getKey(t),p=this.getKey(n),s=this.mappings[a+p];return function(t,n){return e.AsyncAutoMapper.getInstance().mapAsyncInternal(s,t,n)}}return 1===arguments.length?function(e,n,r){return i.mapAsync(t,e,n,r)}:function(e,t,n){return i.mapAsync(e,t,n,o)}},t.prototype.assertConfigurationIsValid=function(t){void 0===t&&(t=!0),e.AutoMapperValidator.assertConfigurationIsValid(this.mappings,t)},t.prototype.createMapForMember=function(e,t,n,r){var o=void 0,i=this.createMapForMemberFindMember(e,n);if(null!==i&&void 0!==i){if(i.ignore)return t;o=""+i.sourceProperty}else i={sourceProperty:n,destinationProperty:n,sourceMapping:!1,mappingValuesAndFunctions:new Array,ignore:!1,async:!1,conditionFunction:void 0};return"function"==typeof r?this.createMapForMemberHandleMappingFunction(e,i,r):i.mappingValuesAndFunctions.push(r),o?o!==i.sourceProperty&&(delete e.forMemberMappings[o],e.forMemberMappings[i.sourceProperty]=i):e.forMemberMappings[i.sourceProperty]=i,t},t.prototype.createMapForMemberFindMember=function(e,t){for(var n in e.forMemberMappings)if(e.forMemberMappings.hasOwnProperty(n)){var r=e.forMemberMappings[n];if(r.destinationProperty===t)return r}return null},t.prototype.createMapForMemberHandleMappingFunction=function(t,n,r){var o=e.AutoMapperHelper.getFunctionParameters(r);o.length<=1?this.createMapForMemberHandleSyncMappingFunction(n,r):this.createMapForMemberHandleAsyncMappingFunction(t,n,r)},t.prototype.createMapForMemberHandleSyncMappingFunction=function(e,t){var n=!0,r={};r[e.sourceProperty]={};var o={ignore:function(){e.ignore=!0,e.sourceProperty=e.destinationProperty,e.mappingValuesAndFunctions=new Array,n=!1},condition:function(t){e.conditionFunction=t},mapFrom:function(t){e.sourceProperty=t},sourceObject:r,sourcePropertyName:e.sourceProperty,destinationPropertyValue:{}};try{t(o)}catch(i){}n&&e.mappingValuesAndFunctions.push(t)},t.prototype.createMapForMemberHandleAsyncMappingFunction=function(e,t,n){e.async=!0,t.async=!0,t.mappingValuesAndFunctions.push(n)},t.prototype.createMapForSourceMember=function(t,n,r,o){var i=!1,a=r,p=!1;if("function"!=typeof o)throw new Error("Configuration of forSourceMember has to be a function with one options parameter.");if(e.AutoMapperHelper.getFunctionParameters(o).length<=1){var s={ignore:function(){i=!0,a=void 0}};o(s)}else p=!0;var u=t.forMemberMappings[r];return u?i?(u.ignore=!0,u.async=!1,u.mappingValuesAndFunctions=new Array):(u.async=p,u.mappingValuesAndFunctions.push(o)):t.forMemberMappings[r]={sourceProperty:r,destinationProperty:a,sourceMapping:!0,mappingValuesAndFunctions:[o],ignore:i,async:p,conditionFunction:void 0},p===!0&&(t.async=!0),n},t.prototype.createMapForAllMembers=function(e,t,n){return e.forAllMemberMappings.push(n),t},t.prototype.createMapIgnoreAllNonExisting=function(e,t){return e.ignoreAllNonExisting=!0,t},t.prototype.createMapConvertToType=function(e,t,n){if(e.destinationTypeClass){if(e.destinationTypeClass===n)return t;throw new Error("Destination type class can only be set once.")}return e.destinationTypeClass=n,t},t.prototype.createMapConvertUsing=function(t,n){var r;try{r=n instanceof e.TypeConverter?n.convert:1===e.AutoMapperHelper.getFunctionParameters(n).length?n:(new n).convert}catch(o){throw new Error("The value provided for typeConverterClassOrFunction is invalid. Exception: "+o)}if(!r||1!==e.AutoMapperHelper.getFunctionParameters(r).length)throw new Error("The value provided for typeConverterClassOrFunction is invalid, because it does not provide exactly one (resolutionContext) parameter.");t.typeConverterFunction=r,t.mapItemFunction=this.mapItemUsingTypeConverter},t.prototype.createMapWithProfile=function(e,t){var n=this.profiles[t];if("undefined"==typeof n||n.profileName!==t)throw new Error("Could not find profile with profile name '"+t+"'.");e.profile=n,this.createMapWithProfileMergeMappings(e,t)},t.prototype.createMapWithProfileMergeMappings=function(e,t){var n=t+"=>"+e.sourceKey+t+"=>"+e.destinationKey,r=this.mappings[n];if(r){r.forAllMemberMappings.length>0&&(p=e.forAllMemberMappings).push.apply(p,r.forAllMemberMappings),r.typeConverterFunction&&(e.typeConverterFunction=r.typeConverterFunction),r.destinationTypeClass&&(e.destinationTypeClass=r.destinationTypeClass);for(var o in r.forMemberMappings)if(r.forMemberMappings.hasOwnProperty(o)){var i=r.forMemberMappings[o],a=this.createMapForMemberFindMember(e,i.destinationProperty);a&&(delete e.forMemberMappings[a.sourceProperty],e.forMemberMappings[i.sourceProperty]=i)}var p}},t.prototype.mapInternal=function(e,t){if(e.async)throw new Error("Support for asynchronous mapping is not implemented in synchronous map() call. Please use mapAsync().");return t instanceof Array?this.mapArray(e,t):e.mapItemFunction.call(this,e,t)},t.prototype.mapArray=function(e,t){for(var n=new Array,r=0,o=t.length;o>r;r++){var i=t[r],a=e.mapItemFunction.call(this,e,i,r);a&&n.push(a)}return n},t.prototype.mapItem=function(e,t,n){var r=this.mapItemCreateDestinationObject(e.destinationTypeClass);for(var o in t)t.hasOwnProperty(o)&&this.mapProperty(e,t,o,r);return r},t.prototype.mapItemUsingTypeConverter=function(e,t,n){var r=this.mapItemCreateDestinationObject(e.destinationTypeClass),o={sourceValue:t,destinationValue:r};return e.typeConverterFunction(o)},t.prototype.mapItemCreateDestinationObject=function(e){return e?new e:{}},t.prototype.mapProperty=function(e,t,n,r){var o=e.forMemberMappings[n];if(o){var i=o.ignore,a=o.conditionFunction,p=(o.destinationProperty,o.mappingValuesAndFunctions);if(i)return;if(a&&a(t)===!1)return;for(var s={mapFrom:function(){},condition:function(e){},sourceObject:t,sourcePropertyName:n,destinationPropertyValue:t[n]},u=0;u<p.length;u++){var c=p[u],f=void 0;"function"==typeof c?(f=c(s),"undefined"==typeof f&&(f=s.destinationPropertyValue)):f=c,s.destinationPropertyValue=f}this.mapSetValue(e,r,o.destinationProperty,s.destinationPropertyValue)}else{if(e.ignoreAllNonExisting)return;var l;l=e.profile?this.mapGetDestinationPropertyName(e.profile,n):n,this.mapSetValue(e,r,l,t[n])}},t.prototype.mapGetDestinationPropertyName=function(e,t){try{for(var n=t.split(e.sourceMemberNamingConvention.splittingExpression),r=n.length-1;r>=0;r--)""===n[r]&&n.splice(r,1);return e.destinationMemberNamingConvention.transformPropertyName(n)}catch(o){return t}},t.prototype.mapSetValue=function(e,t,n,r){if(e.forAllMemberMappings.length>0)for(var o=0,i=e.forAllMemberMappings;o<i.length;o++){var a=i[o];a(t,n,r)}else t[n]=r},t.prototype.getKey=function(t){return"string"==typeof t?t:e.AutoMapperHelper.getClassName(t)},t.instance=new t,t}();e.AutoMapper=t}(AutoMapperJs||(AutoMapperJs={}));var automapper=function(e){return e.automapper=AutoMapperJs.AutoMapper.getInstance(),e.automapper}(this);
var __extends=this&&this.__extends||function(t,n){function e(){this.constructor=t}for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o]);e.prototype=n.prototype,t.prototype=new e},AutoMapperJs;!function(t){"use strict";var n=function(t){function n(){t.call(this),n.asyncInstance=this}return __extends(n,t),n.getInstance=function(){return n.asyncInstance},n.prototype.mapAsyncInternal=function(t,n,e){throw new Error("No implementation yet...")},n.asyncInstance=new n,n}(t.AutoMapper);t.AsyncAutoMapper=n}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(r){"use strict";var t=function(){function r(){}return r.prototype.configure=function(){},r.prototype.createMap=function(r,t){for(var p=Array.prototype.slice.apply(arguments),e=0,o=p.length;o>e;e++)p[e]&&(p[e]=this.profileName+"=>"+p[e]);return automapper.createMap.apply(automapper,p)},r}();r.Profile=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(e){"use strict";var t=function(){function e(){}return e.prototype.convert=function(e){throw new Error("The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.")},e}();e.TypeConverter=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var r=function(){function t(){this.splittingExpression=/(^[a-z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+)/,this.separatorCharacter=""}return t.prototype.transformPropertyName=function(t){for(var r="",a=0,e=t.length;e>a;a++)r+=0===a?t[a].charAt(0).toLowerCase()+t[a].substr(1):t[a].charAt(0).toUpperCase()+t[a].substr(1);return r},t}();t.CamelCaseNamingConvention=r}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var r=function(){function t(){this.splittingExpression=/(^[A-Z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+)/,this.separatorCharacter=""}return t.prototype.transformPropertyName=function(t){for(var r="",a=0,n=t.length;n>a;a++)r+=t[a].charAt(0).toUpperCase()+t[a].substr(1);return r},t}();t.PascalCaseNamingConvention=r}(AutoMapperJs||(AutoMapperJs={}));