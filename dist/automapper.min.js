var AutoMapperJs;!function(e){"use strict";var r=function(){function r(){if(r.instance)throw new Error("Instantiation failed: Use getInstance() function instead of constructor function.");r.instance=this,this.mappings={}}return r.getInstance=function(){return r.instance},r.prototype.initialize=function(e){throw new Error("Not implemented yet...")},r.prototype.createMap=function(e,r){var t=this;if(arguments.length<this.createMap.length)return this.handleCurrying(this.createMap,arguments,this);var n=e+r,o={key:n,forAllMemberMappings:new Array,forMemberMappings:{},typeConverterFunction:void 0,destinationTypeClass:void 0};this.mappings[n]=o;var i={forMember:function(e,r){return t.createMapForMember(o,i,e,r)},forSourceMember:function(e,r){return t.createMapForSourceMember(o,i,e,r)},forAllMembers:function(e){return t.createMapForAllMembers(o,i,e)},convertToType:function(e){return t.createMapConvertToType(o,i,e)},convertUsing:function(e){return t.createMapConvertUsing(o,e)},withProfile:function(e){return t.createMapWithProfile(o,i,e)}};return i},r.prototype.map=function(e,r,t){if(arguments.length<this.map.length)return this.handleCurrying(this.map,arguments,this);var n=e+r,o=this.mappings[n];if(!o)throw new Error("Could not find map object with a source of "+e+" and a destination of "+r);return t instanceof Array?this.mapArray(o,t):this.mapItem(o,t)},r.prototype.createMapForMember=function(e,r,t,n){var o=void 0,i=this.createMapForMemberFindMember(e,t);if(null!==i&&void 0!==i){if(i.ignore)return r;o=""+i.sourceProperty}else i={sourceProperty:t,destinationProperty:t,mappingValuesAndFunctions:new Array,ignore:!1};return"function"==typeof n?this.createMapForMemberHandleMappingFunction(e,i,n):i.mappingValuesAndFunctions.push(n),o?o!==i.sourceProperty&&(delete e.forMemberMappings[o],e.forMemberMappings[i.sourceProperty]=i):e.forMemberMappings[i.sourceProperty]=i,r},r.prototype.createMapForMemberFindMember=function(e,r){for(var t in e.forMemberMappings)if(e.forMemberMappings.hasOwnProperty(t)){var n=e.forMemberMappings[t];if(n.destinationProperty===r)return e.forMemberMappings[t]}return null},r.prototype.createMapForMemberHandleMappingFunction=function(e,r,t){var n=!0,o={};o[r.sourceProperty]={};var i={ignore:function(){r.ignore=!0,r.sourceProperty=r.destinationProperty,r.mappingValuesAndFunctions=new Array,n=!1},mapFrom:function(e){r.sourceProperty=e},sourceObject:o,sourcePropertyName:r.sourceProperty,destinationPropertyValue:{}};try{t(i)}catch(a){}n&&r.mappingValuesAndFunctions.push(t)},r.prototype.createMapForSourceMember=function(e,r,t,n){var o=!1,i=t;if("function"!=typeof n)throw new Error("Configuration of forSourceMember has to be a function with one options parameter.");var a={ignore:function(){o=!0,i=void 0}};n(a);var p=e.forMemberMappings[t];return p?o?(p.ignore=!0,p.mappingValuesAndFunctions=new Array):p.mappingValuesAndFunctions.push(n):e.forMemberMappings[t]={sourceProperty:t,destinationProperty:i,mappingValuesAndFunctions:[n],ignore:o},r},r.prototype.createMapForAllMembers=function(e,r,t){return e.forAllMemberMappings.push(t),r},r.prototype.createMapConvertToType=function(e,r,t){return e.destinationTypeClass=t,r},r.prototype.createMapConvertUsing=function(r,t){var n;try{n=1===this.getFunctionParameters(t).length?t:t instanceof e.TypeConverter?t.convert:(new t).convert}catch(o){throw new Error("The value provided for typeConverterClassOrFunction is invalid. Exception: "+o)}if(!n||1!==this.getFunctionParameters(n).length)throw new Error("The value provided for typeConverterClassOrFunction is invalid, because it does not provide exactly one (resolutionContext) parameter.");r.typeConverterFunction=n},r.prototype.createMapWithProfile=function(e,r,t){throw new Error("Not yet implemented")},r.prototype.mapArray=function(e,r){for(var t=new Array,n=0,o=r.length;o>n;n++){var i=r[n],a=this.mapItem(e,i,n);a&&t.push(a)}return t},r.prototype.mapItem=function(e,r,t){void 0===t&&(t=void 0);var n=e.destinationTypeClass?new e.destinationTypeClass:{};if(e.typeConverterFunction){var o={sourceValue:r,destinationValue:n};return e.typeConverterFunction(o)}for(var i in r)r.hasOwnProperty(i)&&this.mapProperty(e,r,i,n);return n},r.prototype.mapProperty=function(e,r,t,n){var o=e.forMemberMappings[t];if(o){if(o.ignore)return;for(var i={mapFrom:function(){},ignore:function(){},sourceObject:r,sourcePropertyName:t,destinationPropertyValue:r[t]},a=0,p=o.mappingValuesAndFunctions.length;p>a;a++){var u,s=o.mappingValuesAndFunctions[a];"function"==typeof s?(u=s(i),"undefined"==typeof u&&(u=i.destinationPropertyValue)):u=s,i.destinationPropertyValue=u}this.mapSetValue(e,n,o.destinationProperty,i.destinationPropertyValue)}else this.mapSetValue(e,n,t,r[t])},r.prototype.mapSetValue=function(e,r,t,n){if(e.forAllMemberMappings.length>0)for(var o=0;o<e.forAllMemberMappings.length;o++)e.forAllMemberMappings[o](r,t,n);else r[t]=n},r.prototype.getFunctionParameters=function(e){var r=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,t=/([^\s,]+)/g,n=e.toString().replace(r,""),o=n.slice(n.indexOf("(")+1,n.indexOf(")")).match(t);return null===o&&(o=new Array),o},r.prototype.handleCurrying=function(e,r,t){function n(r,o,i){for(var a=o.slice(0),p=i,u=0;u<r.length;u++,i--)o[o.length]=r[u];if(i-r.length<=0){var s=e.apply(t,o);return o=a,i=p,s}return function(){return n(arguments,o.slice(0),i)}}var o=e.length-r.length,i=Array.prototype.slice.apply(r);return n([],i,o)},r.instance=new r,r}();e.AutoMapper=r}(AutoMapperJs||(AutoMapperJs={}));var automapper=function(e){return e.automapper?e.automapper:(e.automapper=AutoMapperJs.AutoMapper.getInstance(),e.automapper)}(this);
var AutoMapperJs;!function(e){"use strict";var t=function(){function e(){}return e.prototype.convert=function(e){throw new Error("The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.")},e}();e.TypeConverter=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var a=function(){function t(){this.splittingExpression=/^[a-z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+/,this.separatorCharacter=""}return t}();t.CamelCaseNamingConvention=a}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var a=function(){function t(){this.splittingExpression=/[A-Z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+/,this.separatorCharacter=""}return t}();t.PascalCaseNamingConvention=a}(AutoMapperJs||(AutoMapperJs={}));