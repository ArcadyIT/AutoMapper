var AutoMapperJs;!function(e){"use strict";var r=function(){function r(){if(r.instance)throw new Error("Instantiation failed: Use getInstance() function instead of constructor function.");r.instance=this,this.mappings={}}return r.getInstance=function(){return r.instance},r.prototype.createMap=function(e,r){var n=this,t=e+r,o={key:t,forAllMemberMappings:new Array,forMemberMappings:{},typeConverterFunction:void 0,destinationTypeClass:void 0};this.mappings[t]=o;var a={forMember:function(e,r){return n.createMapForMember(o,a,e,r)},forSourceMember:function(e,r){return n.createMapForSourceMember(o,a,e,r)},forAllMembers:function(e){return n.createMapForAllMembers(o,a,e)},convertToType:function(e){return n.createMapConvertToType(o,a,e)},convertUsing:function(e){return n.createMapConvertUsing(o,e)}};return a},r.prototype.map=function(e,r,n){var t=e+r,o=this.mappings[t];if(!o)throw new Error("Could not find map object with a source of "+e+" and a destination of "+r);return n instanceof Array?this.mapArray(o,n):this.mapItem(o,n)},r.prototype.createMapForMember=function(e,r,n,t){var o=void 0,a=this.createMapForMemberFindMember(e,n);if(null!==a&&void 0!==a){if(a.ignore)return r;o=""+a.sourceProperty}else a={sourceProperty:n,destinationProperty:n,mappingValuesAndFunctions:new Array,ignore:!1};return"function"==typeof t?this.createMapForMemberHandleMappingFunction(e,a,t):a.mappingValuesAndFunctions.push(t),o?o!==a.sourceProperty&&(delete e.forMemberMappings[o],e.forMemberMappings[a.sourceProperty]=a):e.forMemberMappings[a.sourceProperty]=a,r},r.prototype.createMapForMemberFindMember=function(e,r){for(var n in e.forMemberMappings)if(e.forMemberMappings.hasOwnProperty(n)){var t=e.forMemberMappings[n];if(t.destinationProperty===r)return e.forMemberMappings[n]}return null},r.prototype.createMapForMemberHandleMappingFunction=function(e,r,n){var t=!0,o={};o[r.sourceProperty]={};var a={ignore:function(){r.ignore=!0,r.sourceProperty=r.destinationProperty,r.mappingValuesAndFunctions=new Array,t=!1},mapFrom:function(e){r.sourceProperty=e},sourceObject:o,sourcePropertyName:r.sourceProperty,destinationPropertyValue:{}};try{n(a)}catch(i){}t&&r.mappingValuesAndFunctions.push(n)},r.prototype.createMapForSourceMember=function(e,r,n,t){var o=!1,a=n;if("function"!=typeof t)throw new Error("Configuration of forSourceMember has to be a function with one options parameter.");var i={ignore:function(){o=!0,a=void 0}};t(i);var p=e.forMemberMappings[n];return p?o?(p.ignore=!0,p.mappingValuesAndFunctions=new Array):p.mappingValuesAndFunctions.push(t):e.forMemberMappings[n]={sourceProperty:n,destinationProperty:a,mappingValuesAndFunctions:[t],ignore:o},r},r.prototype.createMapForAllMembers=function(e,r,n){return e.forAllMemberMappings.push(n),r},r.prototype.createMapConvertToType=function(e,r,n){return e.destinationTypeClass=n,r},r.prototype.createMapConvertUsing=function(r,n){var t;try{t=1===this.getFunctionParameters(n).length?n:n instanceof e.TypeConverter?n.convert:(new n).convert}catch(o){throw new Error("The value provided for typeConverterClassOrFunction is invalid. Exception: "+o)}if(!t||1!==this.getFunctionParameters(t).length)throw new Error("The value provided for typeConverterClassOrFunction is invalid, because it does not provide exactly one (resolutionContext) parameter.");r.typeConverterFunction=t},r.prototype.mapArray=function(e,r){for(var n=new Array,t=0,o=r.length;o>t;t++){var a=r[t],i=this.mapItem(e,a,t);i&&n.push(i)}return n},r.prototype.mapItem=function(e,r,n){void 0===n&&(n=void 0);var t=e.destinationTypeClass?new e.destinationTypeClass:{};if(e.typeConverterFunction){var o={sourceValue:r,destinationValue:t};return e.typeConverterFunction(o)}for(var a in r)r.hasOwnProperty(a)&&this.mapProperty(e,r,a,t);return t},r.prototype.mapProperty=function(e,r,n,t){var o=e.forMemberMappings[n];if(o){if(o.ignore)return;for(var a={mapFrom:function(){},ignore:function(){},sourceObject:r,sourcePropertyName:n,destinationPropertyValue:r[n]},i=0,p=o.mappingValuesAndFunctions.length;p>i;i++){var s,u=o.mappingValuesAndFunctions[i];"function"==typeof u?(s=u(a),"undefined"==typeof s&&(s=a.destinationPropertyValue)):s=u,a.destinationPropertyValue=s}this.mapSetValue(e,t,o.destinationProperty,a.destinationPropertyValue)}else this.mapSetValue(e,t,n,r[n])},r.prototype.mapSetValue=function(e,r,n,t){if(e.forAllMemberMappings.length>0)for(var o=0;o<e.forAllMemberMappings.length;o++)e.forAllMemberMappings[o](r,n,t);else r[n]=t},r.prototype.getFunctionParameters=function(e){var r=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,n=/([^\s,]+)/g,t=e.toString().replace(r,""),o=t.slice(t.indexOf("(")+1,t.indexOf(")")).match(n);return null===o&&(o=new Array),o},r.instance=new r,r}();e.AutoMapper=r}(AutoMapperJs||(AutoMapperJs={}));var automapper=function(e){return e.automapper?e.automapper:(e.automapper=AutoMapperJs.AutoMapper.getInstance(),e.automapper)}(this);
var AutoMapperJs;!function(e){"use strict";var t=function(){function e(){}return e.prototype.convert=function(e){throw new Error("The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.")},e}();e.TypeConverter=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));

var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(p){"use strict"}(AutoMapperJs||(AutoMapperJs={}));