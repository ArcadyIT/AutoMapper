/*!
 * TypeScript / Javascript AutoMapper Library v1.2.0
 * https://github.com/ArcadyIT/AutoMapper
 *
 * Copyright 2015 Arcady BV and other contributors
 * Released under the MIT license
 *
 * Date: 2015-09-21T13:56:09.693Z
 */
var AutoMapperJs;!function(e){"use strict";var r=function(){function r(){if(r.instance)throw new Error("Instantiation failed: Use getInstance() function instead of constructor function.");r.instance=this,this.profiles={},this.mappings={}}return r.getInstance=function(){return r.instance},r.prototype.initialize=function(e){var r=this,t={addProfile:function(e){e.configure(),r.profiles[e.profileName]=e},createMap:function(e,t){return r.createMap.apply(r,arguments)}};e(t)},r.prototype.createMap=function(e,r){var t=this;if(arguments.length<2)return this.handleCurrying(this.createMap,arguments,this);var n=e+r,o={sourceKey:e,destinationKey:r,forAllMemberMappings:new Array,forMemberMappings:{},typeConverterFunction:void 0,mapItemFunction:this.mapItem,destinationTypeClass:void 0,profile:void 0};this.mappings[n]=o;var i={forMember:function(e,r){return t.createMapForMember(o,i,e,r)},forSourceMember:function(e,r){return t.createMapForSourceMember(o,i,e,r)},forAllMembers:function(e){return t.createMapForAllMembers(o,i,e)},convertToType:function(e){return t.createMapConvertToType(o,i,e)},convertUsing:function(e){return t.createMapConvertUsing(o,e)},withProfile:function(e){return t.createMapWithProfile(o,e)}};return i},r.prototype.map=function(e,r,t){var n=this;if(arguments.length<3){if(2===arguments.length){var o=this.mappings[e+r];return function(e){return n.mapInternal(o,e)}}return 1===arguments.length?function(r,t){return n.map(e,r,t)}:function(e,r,t){return n.map(e,r,t)}}var o=this.mappings[e+r];if(!o)throw new Error("Could not find map object with a source of "+e+" and a destination of "+r);return this.mapInternal(o,t)},r.prototype.mapInternal=function(e,r){return r instanceof Array?this.mapArray(e,r):e.mapItemFunction.call(this,e,r)},r.prototype.createMapForMember=function(e,r,t,n){var o=void 0,i=this.createMapForMemberFindMember(e,t);if(null!==i&&void 0!==i){if(i.ignore)return r;o=""+i.sourceProperty}else i={sourceProperty:t,destinationProperty:t,mappingValuesAndFunctions:new Array,ignore:!1,conditionFunction:void 0};return"function"==typeof n?this.createMapForMemberHandleMappingFunction(e,i,n):i.mappingValuesAndFunctions.push(n),o?o!==i.sourceProperty&&(delete e.forMemberMappings[o],e.forMemberMappings[i.sourceProperty]=i):e.forMemberMappings[i.sourceProperty]=i,r},r.prototype.createMapForMemberFindMember=function(e,r){for(var t in e.forMemberMappings)if(e.forMemberMappings.hasOwnProperty(t)){var n=e.forMemberMappings[t];if(n.destinationProperty===r)return e.forMemberMappings[t]}return null},r.prototype.createMapForMemberHandleMappingFunction=function(e,r,t){var n=!0,o={};o[r.sourceProperty]={};var i={ignore:function(){r.ignore=!0,r.sourceProperty=r.destinationProperty,r.mappingValuesAndFunctions=new Array,n=!1},condition:function(e){r.conditionFunction=e},mapFrom:function(e){r.sourceProperty=e},sourceObject:o,sourcePropertyName:r.sourceProperty,destinationPropertyValue:{}};try{t(i)}catch(a){}n&&r.mappingValuesAndFunctions.push(t)},r.prototype.createMapForSourceMember=function(e,r,t,n){var o=!1,i=t;if("function"!=typeof n)throw new Error("Configuration of forSourceMember has to be a function with one options parameter.");var a={ignore:function(){o=!0,i=void 0}};n(a);var p=e.forMemberMappings[t];return p?o?(p.ignore=!0,p.mappingValuesAndFunctions=new Array):p.mappingValuesAndFunctions.push(n):e.forMemberMappings[t]={sourceProperty:t,destinationProperty:i,mappingValuesAndFunctions:[n],ignore:o,conditionFunction:void 0},r},r.prototype.createMapForAllMembers=function(e,r,t){return e.forAllMemberMappings.push(t),r},r.prototype.createMapConvertToType=function(e,r,t){return e.destinationTypeClass=t,r},r.prototype.createMapConvertUsing=function(r,t){var n;try{n=t instanceof e.TypeConverter?t.convert:1===this.getFunctionParameters(t).length?t:(new t).convert}catch(o){throw new Error("The value provided for typeConverterClassOrFunction is invalid. Exception: "+o)}if(!n||1!==this.getFunctionParameters(n).length)throw new Error("The value provided for typeConverterClassOrFunction is invalid, because it does not provide exactly one (resolutionContext) parameter.");r.typeConverterFunction=n,r.mapItemFunction=this.mapItemUsingTypeConverter},r.prototype.createMapWithProfile=function(e,r){var t=this.profiles[r];if("undefined"==typeof t||t.profileName!==r)throw new Error("Could not find profile with profile name '"+r+"'.");e.profile=t,this.createMapWithProfileMergeMappings(e,r)},r.prototype.createMapWithProfileMergeMappings=function(e,r){var t=r+"=>"+e.sourceKey+r+"=>"+e.destinationKey,n=this.mappings[t];if(n){n.forAllMemberMappings.length>0&&(p=e.forAllMemberMappings).push.apply(p,n.forAllMemberMappings),n.typeConverterFunction&&(e.typeConverterFunction=n.typeConverterFunction),n.destinationTypeClass&&(e.destinationTypeClass=n.destinationTypeClass);for(var o in n.forMemberMappings)if(n.forMemberMappings.hasOwnProperty(o)){var i=n.forMemberMappings[o],a=this.createMapForMemberFindMember(e,i.destinationProperty);a&&(delete e.forMemberMappings[a.sourceProperty],e.forMemberMappings[i.sourceProperty]=i)}var p}},r.prototype.mapArray=function(e,r){for(var t=new Array,n=0,o=r.length;o>n;n++){var i=r[n],a=e.mapItemFunction.call(this,e,i,n);a&&t.push(a)}return t},r.prototype.mapItem=function(e,r,t){void 0===t&&(t=void 0);var n=this.mapItemCreateDestinationObject(e.destinationTypeClass);for(var o in r)r.hasOwnProperty(o)&&this.mapProperty(e,r,o,n);return n},r.prototype.mapItemUsingTypeConverter=function(e,r,t){void 0===t&&(t=void 0);var n=this.mapItemCreateDestinationObject(e.destinationTypeClass),o={sourceValue:r,destinationValue:n};return e.typeConverterFunction(o)},r.prototype.mapItemCreateDestinationObject=function(e){return e?new e:{}},r.prototype.mapProperty=function(e,r,t,n){var o=e.forMemberMappings[t];if(o){if(o.ignore)return;if(o.conditionFunction&&o.conditionFunction(r)===!1)return;for(var i={mapFrom:function(){},ignore:void 0,condition:function(e){},sourceObject:r,sourcePropertyName:t,destinationPropertyValue:r[t]},a=0,p=o.mappingValuesAndFunctions;a<p.length;a++){var s,u=p[a];"function"==typeof u?(s=u(i),"undefined"==typeof s&&(s=i.destinationPropertyValue)):s=u,i.destinationPropertyValue=s}this.mapSetValue(e,n,o.destinationProperty,i.destinationPropertyValue)}else{var c;c=e.profile?this.mapGetDestinationPropertyName(e.profile,t):t,this.mapSetValue(e,n,c,r[t])}},r.prototype.mapGetDestinationPropertyName=function(e,r){try{for(var t=r.split(e.sourceMemberNamingConvention.splittingExpression),n=t.length-1;n>=0;n--)""===t[n]&&t.splice(n,1);return e.destinationMemberNamingConvention.transformPropertyName(t)}catch(o){return r}},r.prototype.mapSetValue=function(e,r,t,n){if(e.forAllMemberMappings.length>0)for(var o=0,i=e.forAllMemberMappings;o<i.length;o++){var a=i[o];a(r,t,n)}else r[t]=n},r.prototype.getFunctionParameters=function(e){var r=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,t=/([^\s,]+)/g,n=e.toString().replace(r,""),o=n.slice(n.indexOf("(")+1,n.indexOf(")")).match(t);return null===o&&(o=new Array),o},r.prototype.handleCurrying=function(e,r,t){function n(r,o,i){for(var a=o.slice(0),p=i,s=0;s<r.length;s++,i--)o[o.length]=r[s];if(i-r.length<=0){var u=e.apply(t,o);return o=a,i=p,u}return function(){return n(arguments,o.slice(0),i)}}var o=e.length-r.length,i=Array.prototype.slice.apply(r);return n([],i,o)},r.instance=new r,r}();e.AutoMapper=r}(AutoMapperJs||(AutoMapperJs={}));var automapper=function(e){return e.automapper=AutoMapperJs.AutoMapper.getInstance(),e.automapper}(this);
var AutoMapperJs;!function(r){"use strict";var t=function(){function r(){}return r.prototype.configure=function(){},r.prototype.createMap=function(r,t){for(var p=Array.prototype.slice.apply(arguments),e=0,o=p.length;o>e;e++)p[e]&&(p[e]=this.profileName+"=>"+p[e]);return automapper.createMap.apply(automapper,p)},r}();r.Profile=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(e){"use strict";var t=function(){function e(){}return e.prototype.convert=function(e){throw new Error("The TypeConverter.convert method is abstract. Use a TypeConverter extension class instead.")},e}();e.TypeConverter=t}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var r=function(){function t(){this.splittingExpression=/(^[a-z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+)/,this.separatorCharacter=""}return t.prototype.transformPropertyName=function(t){for(var r="",a=0,e=t.length;e>a;a++)r+=0===a?t[a].charAt(0).toLowerCase()+t[a].substr(1):t[a].charAt(0).toUpperCase()+t[a].substr(1);return r},t}();t.CamelCaseNamingConvention=r}(AutoMapperJs||(AutoMapperJs={}));
var AutoMapperJs;!function(t){"use strict";var r=function(){function t(){this.splittingExpression=/(^[A-Z]+(?=$|[A-Z]{1}[a-z0-9]+)|[A-Z]?[a-z0-9]+)/,this.separatorCharacter=""}return t.prototype.transformPropertyName=function(t){for(var r="",a=0,n=t.length;n>a;a++)r+=t[a].charAt(0).toUpperCase()+t[a].substr(1);return r},t}();t.PascalCaseNamingConvention=r}(AutoMapperJs||(AutoMapperJs={}));